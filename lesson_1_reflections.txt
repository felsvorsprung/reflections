--
How did viewing a diff between two versions of a file help you see the bug that was introduced?

Diff makes it obvious where are differences between lines in the two files being compared. It 
helps to focus on relevant bits and pieces.

--
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It is easier to revert changes and to try new things out without worrying to loose working code.


--
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having 
versions automatically saved, like Google Docs does?

By committing manually it is possible to ensure that the code compiles when it is committed.


--
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, 
like Google Docs, treat each file separately?

Because git was designed with revision control of code in mind.


--
How can you use the commands git log and git diff to view the history of files?

git log shows a list of past commits including commit messages and git diff shows the differences between to committed 
versions.


--
How might using version control make you more confident to make changes that could break something?

It is easy to revert to older working versions by using git checkout.


--
Now that you have your workspace set up, what do you want to try using Git for?

To put all my code under version control.
